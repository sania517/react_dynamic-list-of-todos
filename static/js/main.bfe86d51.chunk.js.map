{"version":3,"sources":["utils/utils.ts","components/Todo.tsx","components/TodoList.tsx","App.tsx","index.tsx"],"names":["URL","loadTodos","a","fetch","then","response","json","loadUsers","Todo","todo","className","id","title","user","name","completed","TodoList","props","todos","onNameButton","onTitleButton","onConditionButton","onTaskButton","type","onClick","map","key","App","useState","isLoading","setIsLoading","isError","setIsError","setTodos","length","newTodos","sort","item1","item2","b","localeCompare","Number","Promise","all","todosFromApi","usersFromApi","preparedTodos","find","person","userId","catch","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bfe86d51.chunk.js","sourcesContent":["import { Todo, User } from './types'\n\nconst URL = 'https://jsonplaceholder.typicode.com/';\n\nexport async function loadData<T>(url: string): Promise<T> {\n  return fetch(url)\n    .then(response => response.json());\n}\n\nexport async function loadTodos(): Promise<Todo[]> {\n  return fetch(URL + 'todos')\n    .then(response => response.json());\n}\n\nexport async function loadUsers(): Promise<User[]> {\n  return fetch(URL + 'users')\n    .then(response => response.json());\n}\n","import React, { FC } from 'react';\nimport { TodoWithUser } from '../utils/types'\n\ninterface Props {\n  todo: TodoWithUser;\n}\n\nexport const Todo: FC<Props> = ({ todo }) => (\n  <tr>\n    <td className='cell'>{todo.id}</td>\n    <td className='cell'>{todo.title}</td>\n    <td className='cell'>{todo.user ? todo.user.name : ' - '}</td>\n    <td className='cell'>{todo.completed ? 'pending' : 'completed'}</td>\n  </tr>\n);\n\n","import React, { FC } from 'react';\n\nimport { Todo } from './Todo';\nimport { TodoWithUser } from '../utils/types';\n\ninterface Props {\n  todos: TodoWithUser[];\n  onNameButton(): void;\n  onTitleButton(): void;\n  onConditionButton(): void;\n  onTaskButton(): void;\n}\n\nexport const TodoList: FC<Props> = (props) => {\n  const {\n    todos,\n    onNameButton,\n    onTitleButton,\n    onConditionButton,\n    onTaskButton,\n  } = props;\n\n  return (\n    <table className='todo__table'>\n      <thead>\n        <tr>\n          <th className='table__title'>\n            <button\n              type=\"button\"\n              onClick={onTaskButton}\n              className=\"table__button\"\n            >\n              number task\n            </button>\n          </th>\n          <th className='table__title'>\n            <button\n              type=\"button\"\n              onClick={onTitleButton}\n              className=\"table__button\"\n            >\n              Title\n            </button>\n          </th>\n          <th  className='table__title'>\n            <button\n              type=\"button\"\n              onClick={onNameButton}\n              className=\"table__button\"\n            >\n              Name\n            </button>\n          </th>\n          <th className='table__title'>\n            <button\n              type=\"button\"\n              onClick={onConditionButton}\n              className=\"table__button\"\n            >\n              Condition\n            </button>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {todos.map(todo => <Todo key={todo.id} todo={todo} />)}\n      </tbody>\n    </table>\n  );\n};\n","import React, { FC, useState } from 'react';\nimport './App.css';\n\nimport { loadTodos, loadUsers } from './utils/utils';\nimport { TodoWithUser } from './utils/types'\nimport { TodoList } from './components/TodoList';\n\nconst App: FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState('');\n  const [todos, setTodos] = useState<TodoWithUser[]>([]);\n\n  const clickHandler = () => {\n    setIsLoading(true);\n    Promise.all([\n      loadTodos(),\n      loadUsers(),\n    ])\n      .then(([todosFromApi, usersFromApi]) => {\n        const preparedTodos = todosFromApi.map(todo => {\n          const user = usersFromApi.find(person => todo.userId === person.id);\n\n          return { ...todo, user };\n        });\n\n        setTodos(preparedTodos);\n        setIsLoading(false);\n      })\n      .catch(() => {\n        setIsError('Download error, try again.');\n        setIsLoading(false);\n      });\n  };\n\n  const handlerSortByID = () => {\n    const newTodos = [...todos];\n\n    setTodos(newTodos.sort((item1, item2) => item1.id - item2.id));\n  };\n\n  const handlerSortByComleted = () => {\n    const newTodos = [...todos];\n\n    setTodos(newTodos.sort((item1, item2) => Number(item1.completed) - Number(item2.completed)));\n  };\n\n  const handlerSortByTitle = () => {\n    const newTodos = [...todos];\n\n    setTodos(newTodos.sort((item1, item2) => item1.title.localeCompare(item2.title)));\n  };\n\n  const handlerSortByName = () => {\n    const newTodos = [...todos];\n\n    setTodos(newTodos.sort((item1, item2) => {\n      const a = item1.user ? item1.user.name : '';\n      const b = item2.user ? item2.user.name : '';\n\n      return a.localeCompare(b);\n    }));\n  };\n\n  if (!todos.length) {\n    return (\n      <>\n        <h1>Dynamic list of TODOs</h1>\n        <button\n          type=\"button\"\n          onClick={clickHandler}\n          disabled={isLoading}\n        >\n          load data\n        </button>\n        <p>{isLoading ? 'Loading...' : ''}</p>\n        <p>{isError || ''}</p>\n      </>\n    );\n  }\n\n  return (\n    <TodoList\n      todos={todos}\n      onNameButton={handlerSortByName}\n      onTitleButton={handlerSortByTitle}\n      onConditionButton={handlerSortByComleted}\n      onTaskButton={handlerSortByID}\n    />\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}