{"version":3,"sources":["utils.ts","components/Todo.tsx","components/TodoList.tsx","App.tsx","index.tsx"],"names":["loadTodos","a","fetch","then","response","json","loadUsers","Todo","todo","id","title","user","name","completed","TodoList","props","todos","onNameButton","onTitleButton","onConditionButton","onTaskButton","type","onClick","className","map","key","App","useState","isLoading","setIsLoading","isError","setIsError","setTodos","length","newTodos","sort","item1","item2","nameItem1","nameItem2","localeCompare","Promise","all","responses","preparedTodos","find","person","userId","catch","disabled","ReactDOM","render","document","getElementById"],"mappings":"qQA4CO,SAAeA,IAAtB,+B,4CAAO,sBAAAC,EAAA,+EACEC,MAAM,8CACVC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAFxB,4C,sBAKA,SAAeC,IAAtB,+B,4CAAO,sBAAAL,EAAA,+EACEC,MAAM,8CACVC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAFxB,4C,sBC1CA,IAAME,EAAkB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChC,OACE,4BACE,4BAAKA,EAAKC,IACV,4BAAKD,EAAKE,OACV,4BAAKF,EAAKG,KAAOH,EAAKG,KAAKC,KAAO,OAClC,4BAAKJ,EAAKK,UAAY,UAAY,eCA3BC,EAAsB,SAACC,GAAW,IAE3CC,EAKED,EALFC,MACAC,EAIEF,EAJFE,aACAC,EAGEH,EAHFG,cACAC,EAEEJ,EAFFI,kBACAC,EACEL,EADFK,aAGF,OACE,+BACE,+BACE,4BACE,4BACE,4BACEC,KAAK,SACLC,QAASF,EACTG,UAAU,gBAHZ,gBAQF,4BACE,4BACEF,KAAK,SACLC,QAASJ,EACTK,UAAU,gBAHZ,UAQF,4BACE,4BACEF,KAAK,SACLC,QAASL,EACTM,UAAU,gBAHZ,SAQF,4BACE,4BACEF,KAAK,SACLC,QAASH,EACTI,UAAU,gBAHZ,gBAUN,+BACGP,EAAMQ,KAAI,SAAAhB,GAAI,OAAI,kBAAC,EAAD,CAAMiB,IAAKjB,EAAKC,GAAID,KAAMA,UC6BtCkB,EAvFK,WAAO,IAAD,EACUC,oBAAkB,GAD5B,mBACjBC,EADiB,KACNC,EADM,OAEMF,mBAAiB,IAFvB,mBAEjBG,EAFiB,KAERC,EAFQ,OAGEJ,mBAAyB,IAH3B,mBAGjBX,EAHiB,KAGVgB,EAHU,KA2DxB,OAAKhB,EAAMiB,OAkBT,kBAAC,EAAD,CACEjB,MAAOA,EACPC,aA/BsB,WACxB,IAAMiB,EAAQ,YAAOlB,GAErBgB,EAASE,EAASC,MAAK,SAACC,EAAOC,GAC7B,IAAMC,EAAYF,EAAMzB,KAAOyB,EAAMzB,KAAKC,KAAO,GAC3C2B,EAAYF,EAAM1B,KAAO0B,EAAM1B,KAAKC,KAAO,GAEjD,OAAO0B,EAAUE,cAAcD,QAyB/BrB,cAtCuB,WACzB,IAAMgB,EAAQ,YAAOlB,GAErBgB,EAASE,EAASC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAM1B,MAAM8B,cAAcH,EAAM3B,YAoCvES,kBAlD0B,WAC5B,IAAMe,EAAQ,YAAOlB,GAErBgB,EAASE,EAASC,MAAK,SAACC,EAAOC,GAI7B,OAHeD,EAAMvB,UAAY,EAAI,IACtBwB,EAAMxB,UAAY,EAAI,QA8CrCO,aAzDoB,WACtB,IAAMc,EAAQ,YAAOlB,GAErBgB,EAASE,EAASC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAM3B,GAAK4B,EAAM5B,UAiCxD,oCACE,qDACA,4BACEY,KAAK,SACLC,QA7Da,WACnBO,GAAa,GACbY,QAAQC,IAAI,CACV1C,IACAM,MAECH,MAAK,SAAAwC,GACJ,IAAMC,EAAgBD,EAAU,GAAGnB,KAAI,SAAAhB,GACrC,IAAMG,EAAOgC,EAAU,GAAGE,MAAK,SAAAC,GAAM,OAAItC,EAAKuC,SAAWD,EAAOrC,MAEhE,OAAO,eAAKD,EAAZ,CAAkBG,YAGpBqB,EAASY,MAEVI,OAAM,WACLjB,EAAW,8BACXF,GAAa,OA6CXoB,SAAUrB,GAHZ,aAOA,2BAAIA,EAAY,aAAe,IAC/B,2BAAIE,GAAW,MC1EvBoB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.4b90e056.chunk.js","sourcesContent":["export interface Todo {\n  userId: number;\n  id: number;\n  title: string;\n  completed: boolean;\n}\n\nexport interface TodoWithName extends Todo {\n  user: User | undefined;\n}\n\ninterface Company {\n  name: string;\n  catchPhrase: string;\n  bs: string;\n}\n\ninterface Address {\n  street: string;\n  suite: string;\n  city: string;\n  zipcode: string;\n  geo: {\n    lat: string;\n    lng: string;\n  };\n}\n\nexport interface User {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n  address: Address;\n  phone: string;\n  website: string;\n  company: Company;\n}\n\nexport async function loadData<T>(url: string): Promise<T> {\n  return fetch(url)\n    .then(response => response.json());\n}\n\nexport async function loadTodos(): Promise<Todo[]> {\n  return fetch('https://jsonplaceholder.typicode.com/todos')\n    .then(response => response.json());\n}\n\nexport async function loadUsers(): Promise<User[]> {\n  return fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json());\n}\n","import React, { FC } from 'react';\nimport { TodoWithName } from '../utils';\n\ninterface Props {\n  todo: TodoWithName;\n}\n\nexport const Todo: FC<Props> = ({ todo }) => {\n  return (\n    <tr>\n      <td>{todo.id}</td>\n      <td>{todo.title}</td>\n      <td>{todo.user ? todo.user.name : ' - '}</td>\n      <td>{todo.completed ? 'pending' : 'completed'}</td>\n    </tr>\n  );\n};\n","import React, { FC } from 'react';\n\nimport { Todo } from './Todo';\nimport { TodoWithName } from '../utils';\n\ninterface Props {\n  todos: TodoWithName[];\n  onNameButton(): void;\n  onTitleButton(): void;\n  onConditionButton(): void;\n  onTaskButton(): void;\n}\n\nexport const TodoList: FC<Props> = (props) => {\n  const {\n    todos,\n    onNameButton,\n    onTitleButton,\n    onConditionButton,\n    onTaskButton,\n  } = props;\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>\n            <button\n              type=\"button\"\n              onClick={onTaskButton}\n              className=\"headerButton\"\n            >\nnumber task\n            </button>\n          </th>\n          <th>\n            <button\n              type=\"button\"\n              onClick={onTitleButton}\n              className=\"headerButton\"\n            >\nTitle\n            </button>\n          </th>\n          <th>\n            <button\n              type=\"button\"\n              onClick={onNameButton}\n              className=\"headerButton\"\n            >\nName\n            </button>\n          </th>\n          <th>\n            <button\n              type=\"button\"\n              onClick={onConditionButton}\n              className=\"headerButton\"\n            >\nCondition\n            </button>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {todos.map(todo => <Todo key={todo.id} todo={todo} />)}\n      </tbody>\n    </table>\n  );\n};\n","import React, { FC, useState } from 'react';\nimport './App.css';\n\nimport { loadTodos, loadUsers, TodoWithName } from './utils';\nimport { TodoList } from './components/TodoList';\n\n\nconst App: FC<{}> = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [isError, setIsError] = useState<string>('');\n  const [todos, setTodos] = useState<TodoWithName[]>([]);\n  const clickHandler = () => {\n    setIsLoading(true);\n    Promise.all([\n      loadTodos(),\n      loadUsers(),\n    ])\n      .then(responses => {\n        const preparedTodos = responses[0].map(todo => {\n          const user = responses[1].find(person => todo.userId === person.id);\n\n          return { ...todo, user };\n        });\n\n        setTodos(preparedTodos);\n      })\n      .catch(() => {\n        setIsError('Download error, try again.');\n        setIsLoading(false);\n      });\n  };\n\n  const handlerSortByID = () => {\n    const newTodos = [...todos];\n\n    setTodos(newTodos.sort((item1, item2) => item1.id - item2.id));\n  };\n\n  const handlerSortByComleted = () => {\n    const newTodos = [...todos];\n\n    setTodos(newTodos.sort((item1, item2) => {\n      const value1 = item1.completed ? 1 : 0;\n      const value2 = item2.completed ? 1 : 0;\n\n      return value1 - value2;\n    }));\n  };\n\n  const handlerSortByTitle = () => {\n    const newTodos = [...todos];\n\n    setTodos(newTodos.sort((item1, item2) => item1.title.localeCompare(item2.title)));\n  };\n\n  const handlerSortByName = () => {\n    const newTodos = [...todos];\n\n    setTodos(newTodos.sort((item1, item2) => {\n      const nameItem1 = item1.user ? item1.user.name : '';\n      const nameItem2 = item2.user ? item2.user.name : '';\n\n      return nameItem1.localeCompare(nameItem2);\n    }));\n  };\n\n  if (!todos.length) {\n    return (\n      <>\n        <h1>Dynamic list of TODOs</h1>\n        <button\n          type=\"button\"\n          onClick={clickHandler}\n          disabled={isLoading}\n        >\nload data\n        </button>\n        <p>{isLoading ? 'Loading...' : ''}</p>\n        <p>{isError || ''}</p>\n      </>\n    );\n  }\n\n  return (\n    <TodoList\n      todos={todos}\n      onNameButton={handlerSortByName}\n      onTitleButton={handlerSortByTitle}\n      onConditionButton={handlerSortByComleted}\n      onTaskButton={handlerSortByID}\n    />\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}